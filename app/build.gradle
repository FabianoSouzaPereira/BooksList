plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    signingConfigs {
        debug {

        }
        release {
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId 'br.com.fabianospdev.bookslist'
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"
        useLibrary  'org.apache.http.legacy'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'br.com.fabianospdev.bookslist'
    flavorDimensions 'default', 'pro-versions', 'extra-features'
    productFlavors {
        free {
            dimension 'default'
            applicationId 'br.com.fabianospdev.bookslist_free'
            versionCode 1
            versionName '1.0.0'
            versionNameSuffix 'free-'
            targetSdk 33
            minSdk 28
            signingConfig signingConfigs.debug
        }
        paid {
            dimension 'default'
            applicationId 'br.com.fabianospdev.bookslist_paid'
            versionCode 1
            versionName '1.0.0'
            versionNameSuffix 'paid-'
            targetSdk 33
            minSdk 28
        }
        fullversion {
            dimension 'pro-versions'
            applicationId 'br.com.fabianospdev.bookslist_full'
            versionCode 1
            versionName '1.0.0'
            targetSdk 33
            minSdk 28
        }
        selected {
            dimension 'extra-features'
            applicationId 'br.com.fabianospdev.bookslist-selected'
            versionCode 1
            versionName '1.0.0'
            targetSdk 33
            minSdk 28
        }
    }
    buildToolsVersion '33.0.0'
}

dependencies {
    def lifecycle_version = "2.6.0-alpha03"
    def arch_version = "2.1.0"
    
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:${rootProject.ext.corektxVersion}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompatVersion}"
    implementation "com.google.android.material:material:1.7.0"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayoutVersion}"
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"
    /******** LifeCycle ********/
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.livedataktxVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.viewmodelktxVersion}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.runtimektxVersion}"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"


    /******** Tests ********/
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.4"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.0"
    implementation "com.google.android.material:material:1.7.0"
    implementation "androidx.annotation:annotation:1.5.0"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    
    /******** DAGGER ********/
    implementation 'com.google.dagger:dagger:2.44.2'
    kapt 'com.google.dagger:dagger-compiler:2.44.2'

    /******** Retrofit ********/
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.convertergsonVersion}"

    /******** Room ********/
    def roomVersion = "2.4.3"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    /* To use Kotlin annotation processing tool (kapt) */
    kapt("androidx.room:room-compiler:$roomVersion")
    /* optional - Kotlin Extensions and Coroutines support for Room */
    implementation("androidx.room:room-ktx:$roomVersion")

    /****  GLIDE  ****/
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.13.0"

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation project(':imageprocessing')
}